version: "3.8"

services:
  postgres:
    container_name: postgres
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PW}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./scripts/:/docker-entrypoint-initdb.d/
      - postgres_data:/var/lib/postgresql/data
    restart: always
    logging:
      options:
        max-size: 10m
        max-file: "3"
    networks:
      - postgres_network

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    depends_on:
      - postgres
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_MAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PW}
    ports:
      - "9000:80"
    restart: always
    volumes:
    - pgadmin_data:/var/lib/pgadmin
    networks:
      - postgres_network

  dremio:
    container_name: dremio
    image: dremio/dremio-oss:$DREMIO_IMAGE_VERSION
    volumes:
      - dremio_data:/opt/dremio/data
    ports:
      - "9001:9047"
      - "31010:31010"
      - "32010:32010"
      - "45678:45678"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    networks:
      - postgres_network

  zookeeper:
    image: "bitnami/zookeeper:3-debian-10"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-localhost}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - "kafka_data:/bitnami"
    depends_on:
      - zookeeper

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9002:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:19092"
    depends_on:
      - kafka

volumes:
  postgres_data:
  dremio_data:
  pgadmin_data:
  kafka_data:

networks:
  postgres_network:
    driver: bridge